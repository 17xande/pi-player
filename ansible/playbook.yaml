---
- name: Pi-Player setup
  hosts: devices

  vars:
    test: nothingfornow
    ansible_python_interpreter: python3

  tasks:
    - name: Initial setup requiring root access.
      become: true
      block:
        # Not sure if other tools are necessary for the final deployment.
        # Python is necessary for Ansible
        - name: Install tools, git & python.
          ansible.builtin.package:
            name:
              - git
              - python3
              # - python3-venv
              # - python3-pip
              # - python3-gi
            state: present
            update_cache: true

        - name: Install unclutter.
          ansible.builtin.package:
            name: unclutter
            state: present

        # SSH will have to be installed and enabled prior to running this playbook.
            # Perhaps create another playbook that can be run locally to install and enable SSH.
        # - name: Install ssh.
        #   ansible.builtin.package:
        #     name: ssh
        #     state: present

        # - name: Enable and start ssh.
        #   ansible.builtin.systemd_service:
        #     name: ssh
        #     enabled: true
        #     state: started

        - name: Install python psutil package.
          ansible.builtin.pip:
            name: psutil
            break_system_packages: true

        - name: Remove update notifier.
          ansible.builtin.package:
            name: update-notifier
            state: absent

        - name: Add the current user to the input group.
          ansible.builtin.user:
            name: "{{ ansible_user_id }}"
            groups: input
            append: true

    - name: Install Chromium.
      community.general.snap:
        name: chromium
        state: present

    - name: Install neovim.
      community.general.snap:
        name: nvim
        state: present
        classic: true
        channel: "beta"

    - name: Create a directory for the pi-player binary.
      ansible.builtin.file:
        name: /home/{{ ansible_user_id }}/.local/bin
        state: directory
        mode: "0744"

    - name: Download the pi-player binary.
      ansible.builtin.get_url:
        url: https://github.com/17xande/pi-player/releases/latest/download/pi-player
        dest: /home/{{ ansible_user_id }}/.local/bin/
        mode: '0744'

    - name: Create systemd user dir.
      ansible.builtin.file:
        name: /home/{{ ansible_user_id }}/.config/systemd/user
        state: directory
        mode: "0744"

    - name: Download systemd service file for pi-player.
      ansible.builtin.get_url:
        url: https://github.com/17xande/pi-player/raw/master/services/pi-player.service
        dest: /home/{{ ansible_user_id }}/.config/systemd/user/
        mode: "0744"

    - name: Download systemd service file for unclutter.
      ansible.builtin.get_url:
        url: https://github.com/17xande/pi-player/raw/master/services/unclutter.service
        dest: /home/{{ ansible_user_id }}/.config/systemd/user/
        mode: "0744"

    - name: Enable pi-player service.
      ansible.builtin.systemd_service:
        name: pi-player.service
        scope: user
        enabled: true
        daemon_reload: true

    - name: Enable unclutter service.
      ansible.builtin.systemd_service:
        name: unclutter.service
        scope: user
        enabled: true

    - name: Remove desktop background image in light mode.
      community.general.dconf:
        key: "/org/gnome/desktop/background/picture-uri"
        value: "''"

    - name: Remove desktop background image in dark mode.
      community.general.dconf:
        key: "/org/gnome/desktop/background/picture-uri-dark"
        value: "''"

    - name: Set desktop color to black.
      community.general.dconf:
        key: "/org/gnome/desktop/background/primary-color"
        value: "'#000000'"

    - name: Set appearance to dark.
      community.general.dconf:
        key: "/org/gnome/desktop/interface/color-scheme"
        value: "'prefer-dark'"

    - name: Set dock to autohide.
      community.general.dconf:
        key: "/org/gnome/shell/extensions/dash-to-dock/dock-fixed"
        value: false

    - name: Set dock to be smaller.
      community.general.dconf:
        key: "/org/gnome/shell/extensions/dash-to-dock/extend-height"
        value: false

    # TODO: not sure if this setting still works
    - name: Set notifications to Do Not Disturb.
      community.general.dconf:
        key: "/org/gnome/desktop/notifications/show-banners"
        value: false

    - name: Disable lock screen notificaitons.
      community.general.dconf:
        key: "/org/gnome/desktop/notifications/show-in-lock-screen"
        value: false

    - name: Set idle-delay to never.
      community.general.dconf:
        key: "/org/gnome/desktop/session/idle-delay"
        value: 0

    - name: Set sleep timeout to never.
      community.general.dconf:
        key: "/org/gnome/settings-daemon/plugins/power/sleep-inactive-ac-timeout"
        value: 0

    - name: Set sleep to never.
      community.general.dconf:
        key: "/org/gnome/settings-daemon/plugins/power/sleep-inactive-ac-type"
        value: "'nothing'"

    - name: Disable automatic screen lock.
      community.general.dconf:
        key: "/org/gnome/desktop/screensaver/lock-enabled"
        value: false

    - name: Disable lock screen on suspend.
      community.general.dconf:
        key: "/org/gnome/desktop/screensaver/ubuntu-lock-on-suspend"
        value: false

    - name: Disable notifications on lock screen.
      community.general.dconf:
        key: "/org/gnome/desktop/notifications/show-in-lock-screen"
        value: false

    - name: Disable system sounds.
      community.general.dconf:
        key: "/org/gnome/desktop/sound/event-sounds"
        value: false

    - name: Set timezone to update automatically.
      community.general.dconf:
        key: "/org/gnome/desktop/datetime/automatic-timezone"
        value: true
